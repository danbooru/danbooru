<% upload = upload_media_asset.upload %>
<% media_asset = upload_media_asset.media_asset %>
<% source = upload_media_asset.source_extractor %>

<%= tag.div class: "upload-container h-full",
            "x-data": "{ dock: $persist('#{j JSON.parse(cookies.fetch(:upload_edit_panel_dock, "auto".to_json))}').as('upload_edit_panel_dock').using(Danbooru.Cookie) }",
            "x-bind:data-dock": "dock",
            "data-dock": JSON.parse(cookies.fetch(:upload_edit_panel_dock, "auto".to_json)),
            "data-status": upload_media_asset.status,
            style: ("--edit-container-width: #{cookies[:upload_edit_container_width]};" if cookies[:upload_edit_container_width].present?) do %>
  <div class="upload-image-container z-10">
    <% if upload_media_asset.loading? %>
      <p>Processing <%= external_link_to upload_media_asset.source_url %>...</p>
    <% elsif upload_media_asset.failed? %>
      <p>Error: <%= upload_media_asset.error %>.</p>
    <% else %>
      <%= render "upload_media_assets/media_asset", upload_media_asset: %>
    <% end %>
  </div>

  <div class="upload-divider px-4 cursor-col-resize"></div>

  <div class="upload-edit-container">
    <%= edit_form_for(post, error_notice: false, html: { id: "form", class: "upload-form md:sticky top-4" }) do |f| %>
      <%= hidden_field_tag :media_asset_id, upload_media_asset.media_asset_id %> <%# used by iqdb javascript %>
      <%= hidden_field_tag :upload_media_asset_id, upload_media_asset.id %>

      <%= render(TabPanelComponent.new do |t| %>
        <% t.panel("Tags", active: true) do %>
          <%= f.input :rating,
                      label: "Rating #{help_tooltip embed_wiki("help:rating_notice", classes: "text-xs"), link_class: "inactive-link" }".html_safe,
                      wrapper_html: { class: "radio-button-group thin-x-scrollbar text-xs", "x-on:input": "$el.classList.remove('field_with_errors')" },
                      collection: Post::RATINGS.invert.reverse_each.to_h,
                      as: :radio_buttons,
                      selected: post.rating,
                      error: false %>

          <div>
            <div class="flex justify-between">
              <%= f.label :tag_string, "Tags" %>

              <span data-tag-counter data-for="#post_tag_string" class="text-muted text-sm">
                <span class="tag-count"></span>
              </span>
            </div>

            <%= f.input :tag_string, label: false, hint: tag.span("Ctrl+Enter to submit", class: "desktop-only"), input_html: { class: "text-sm", "data-autocomplete": "tag-edit", "data-shortcut": "e", value: post.tag_string } %>

            <div class="mb-4 flex items-center gap-2">
              <%= f.submit "Post", class: "button-primary", disabled: media_asset.nil? %>

              <% if CurrentUser.is_contributor? %>
                <%= f.input :is_pending, as: :boolean, label: "Upload for approval", wrapper_html: { class: "!m-0" }, input_html: { checked: post.is_pending? } %>
              <% else %>
                <span id="upload-limit" class="fineprint">Upload limit: <%= render "users/upload_limit", user: CurrentUser.user %></span>
              <% end %>

              <% if CurrentUser.post_upload_count < 10 %>
                <p class="fineprint my-4">Read the <%= link_to_wiki "upload rules", "help:upload_rules" %> before uploading.</p>
              <% end %>
            </div>

              <%= render "related_tags/container", media_asset: media_asset %>
          </div>
        <% end %>

        <% t.panel("Source") do %>
          <% if upload_media_asset.source_extractor.present? %>
            <%= render_source_data(upload_media_asset.source_extractor) %>
          <% end %>

          <%= f.input :source, as: :string, input_html: { value: post.source } %>

          <%= f.simple_fields_for :artist_commentary, post.artist_commentary do |fa| %>
            <%= fa.input :original_title, as: :string %>
            <%= fa.input :original_description, as: :dtext, label: "Original description" %>
            <%= fa.input :translated_title, as: :string %>
            <%= fa.input :translated_description, as: :dtext, label: "Translated description" %>
          <% end %>
        <% end %>

        <% t.panel("Similar") do %>
          <%= f.input :parent_id, label: "Parent ID", as: :string, input_html: { value: post.parent_id } %>

          <div class="space-y-4">
            <% if source.present? && source.related_posts.present? %>
              <div id="related-posts-by-source">
                <h2>Related Posts</h2>

                <p class="fineprint">
                  Found <%= link_to pluralize(source.related_posts.total_count, "other post"), posts_path(tags: source.related_posts_search_query) %> from the same source.
                </p>

                <%= render(PostGalleryComponent.new(size: "180")) do |gallery| %>
                  <% source.related_posts.each do |post| %>
                    <%= gallery.with_post(post: post, size: gallery.size, show_deleted: true) do |preview| %>
                      <% preview.with_footer do %>
                        <div class="text-xs text-center mt-1">
                          <%= render "posts/partials/show/preview_source_footer", post: post %>
                        </div>
                      <% end %>
                    <% end %>
                  <% end %>
                <% end %>
              </div>
            <% end %>

            <div id="iqdb-similar" style="display: none;"></div>
          </div>
        <% end %>

        <% t.spacer %>

        <% help_updated = WikiPage.find_by_title("help:upload_notice")&.updated_at.to_i > CurrentUser.user.posts.maximum(:created_at).to_i %>
        <% help_icon = exclamation_icon(class: "text-warning") if help_updated %>
        <% t.panel("#{help_icon} Help".strip.html_safe, id: "help-tab") do %>
          <%= embed_wiki("help:upload_notice") %>
          <%= render "application/update_notice", record: WikiPage.find_by_title("help:upload_notice"), current_user: CurrentUser.user %>
        <% end %>

        <% t.menu_item(id: "docking-menu-tab") do %>
          <% render PopupMenuComponent.new(button_classes: "inactive-link") do |menu| %>
            <% menu.with_item do %>
              <%= link_to "javascript:void(0)", "x-on:click": "dock = 'auto'", id: "dock-auto-link", title: "Rotate your screen to change layout" do %>
                <%= rotate_icon %> Automatic
              <% end %>
            <% end %>

            <% menu.with_item do %>
              <%= link_to "javascript:void(0)", "x-on:click": "dock = 'right'", id: "dock-right-link", "data-shortcut": "shift+r" do %>
                <%= dock_right_icon %> Dock to Right
              <% end %>
            <% end %>

            <% menu.with_item do %>
              <%= link_to "javascript:void(0)", "x-on:click": "dock = 'bottom'", id: "dock-bottom-link", "data-shortcut": "shift+b" do %>
                <%= dock_bottom_icon %> Dock to Bottom
              <% end %>
            <% end %>

            <% menu.with_item do %>
              <%= link_to "javascript:void(0)", "x-on:click": "dock = 'left'", id: "dock-left-link", "data-shortcut": "shift+l" do %>
                <%= dock_left_icon %> Dock to Left
              <% end %>
            <% end %>

            <% menu.with_item do %>
              <%= link_to "javascript:void(0)", id: "open-edit-dialog", "data-shortcut": "shift+e" do %>
                <%= external_link_icon(class: "text-xs") %> Open window
              <% end %>
            <% end %>
          <% end %>
        <% end %>
      <% end) %>
    <% end %>
  </div>
<% end %>
